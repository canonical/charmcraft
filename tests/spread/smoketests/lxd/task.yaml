summary: pack a init-created charm with lxd

# run last because this test deletes base instances
priority: -10

prepare: |
  charmcraft init --project-dir=charm
  cd charm
  sed -i "s/22.04/$(echo $SPREAD_SYSTEM | cut -c 8-12)/g" charmcraft.yaml

  # The charm itself doesn't matter, so replace the dependencies with something
  # simple and small so we don't have to build pyyaml.
  # NOTE: We still do need at least one dependency here so we can trigger the cache.
  echo "distro" > requirements.txt

  # delete charmcraft instances
  ALL_INSTANCES="$(lxc list --project=charmcraft --format=csv --columns="n")"
  if [ -n "$ALL_INSTANCES" ]; then
    for instance in $ALL_INSTANCES; do
      lxc delete --project=charmcraft --force "$instance"
    done
  fi

restore: |
  pushd charm
  charmcraft clean
  popd

  rm -rf charm

execute: |
  cd charm
  charmcraft pack
  test -f charm*.charm

  # Check that deleting the instance and recreating it from base after deleting
  # the cache directory succeeds.
  charmcraft clean
  rm -rf ~/snap/charmcraft/common/cache/charmcraft/
  charmcraft pack

  # there should be two instances, sorted alphabetically:
  # - base-instance-charmcraft...
  # - charmcraft-charm-...
  INSTANCE="$(lxc --project=charmcraft list --format=csv -c n | tail -n 1)"

  lxc --project charmcraft start "$INSTANCE"
  REFRESH_HOLD="$(lxc --project charmcraft exec "$INSTANCE" -- snap get system refresh.hold)"

  # assert snap refreshes are held
  if [[ "$REFRESH_HOLD" != "forever" ]]; then
    echo "snap refresh not set as expected"
    exit 1
  fi

  charmcraft clean
  ALL_INSTANCES="$(lxc --project=charmcraft list --format=csv -c n)"

  # confirm only one instance remains
  if [[ $(echo "$ALL_INSTANCES" | wc -l) != 1 ]]; then
    echo "wrong number of lxd instances"
    exit 1
  fi

  # confirm the remaining instance is the base instance
  if ! grep -q "^base-instance-charmcraft" <<< "$ALL_INSTANCES"; then
    echo "could not find base instance"
    exit 1
  fi
