summary: full charm cycle -- pack, upload, check revisions, release, check channel map

include:
  - tests/

prepare: |
  tests.pkgs install jq
  charmcraft init --project-dir=charm --name=$CHARM_DEFAULT_NAME --profile=machine
  cd charm

  cat <<- EOF >> charmcraft.yaml
  charmhub:
    api-url: https://api.staging.charmhub.io
    storage-url: https://storage.staging.snapcraftcontent.com
  EOF

  # If necessary, try to register the charm.
  if ! charmcraft status $CHARM_DEFAULT_NAME; then
    if ! charmcraft register $CHARM_DEFAULT_NAME; then
      ERROR Charm $CHARM_DEFAULT_NAME cannot be registered to this account.
    fi
  fi

restore: |
  pushd charm
  charmcraft clean
  popd

  rm -rf charm

execute: |
  cd charm
  start_datetime=$(date -u --iso-8601=seconds)

  # pack
  charmcraft pack --verbose
  test -f $CHARM_DEFAULT_NAME*.charm
  charm_filepath=$(ls $CHARM_DEFAULT_NAME*.charm)

  # upload and get uploaded revision
  uploaded_revno=$(charmcraft upload $charm_filepath --format=json | jq .revision)

  # check the uploaded revision is newer than start datetime (note we're not using latest, as
  # it may not be the one we uploaded here, because multiple tests running concurrently)
  up_revision=$(charmcraft revisions $CHARM_DEFAULT_NAME --format=json | jq -r --arg revno $uploaded_revno '.[] | select(.revision|tostring==$revno)')
  up_revision_created=$(echo $up_revision | jq -r .created_at)
  [[ $start_datetime < $up_revision_created ]]

  # release that last revision to edge
  charmcraft release $CHARM_DEFAULT_NAME -r $uploaded_revno -c edge

  # validate the channel map
  edge_release=$(charmcraft status $CHARM_DEFAULT_NAME --format=json | jq -r '.[] | select(.track=="latest") | .mappings[0].releases | .[] | select(.channel=="latest/edge")')
  edge_revision=$(echo $edge_release | jq -r .revision)
  # check that the current release greater or equal than what was
  # uploaded, because other tests running concurrently may have
  # also released (but for sure cannot be a previous revision)
  test $edge_revision -ge $uploaded_revno
